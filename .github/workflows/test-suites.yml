name: Test Suites
on:
  push: { branches: [ main, feat/* ] }
  pull_request: { branches: [ main ] }

jobs:
  golden:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
          pip install pytest PyPDF2 PyYAML
      - name: Run golden tests
        run: |
          mkdir -p results logs
          pytest tests/golden_cases/ --junitxml=results/golden.xml
      - name: Upload test report
        uses: actions/upload-artifact@v4
        with: { name: golden-report, path: results/golden.xml }
      - name: Upload audit logs (if any)
        uses: actions/upload-artifact@v4
        with: { name: audit-logs, path: logs, if-no-files-found: ignore }

  llm-pipeline-dev:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
          pip install pytest PyPDF2 PyYAML
      - name: Run LLM pipeline
        run: |
          mkdir -p artifacts/llm_output
          python scripts/run_llm_pipeline.py \
            --doc Reports/atlas-highlights-scams-and-fraud.pdf \
            --config configs/llm_dev.yaml \
            --out artifacts/llm_output
        continue-on-error: true  # Don't fail CI if LLM pipeline has issues
      - name: Run LLM integration tests
        run: |
          pytest tests/test_llm_integration.py -v --junitxml=results/llm_tests.xml
      - name: Upload LLM artifacts
        uses: actions/upload-artifact@v4
        with:
          name: llm-pipeline-output
          path: artifacts/llm_output/**
          if-no-files-found: warn
      - name: Upload LLM test report
        uses: actions/upload-artifact@v4
        with:
          name: llm-test-report
          path: results/llm_tests.xml
          if-no-files-found: warn

  parity:
    runs-on: ubuntu-latest
    needs: [golden, llm-pipeline-dev]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pytest PyPDF2 PyYAML
      - name: Download LLM artifacts
        uses: actions/download-artifact@v4
        with:
          name: llm-pipeline-output
          path: artifacts/llm_output
        continue-on-error: true
      - name: Generate scripted artifacts for comparison
        run: |
          # Generate scripted pipeline output
          python scripts/demo_pdf_to_rules.py \
            --pdf Reports/atlas-highlights-scams-and-fraud.pdf \
            --json-out artifacts/demo_rules.json \
            --html-out artifacts/demo_report.html || true
      - name: Run parity tests
        run: |
          mkdir -p results
          pytest tests/llm/test_parity_vs_scripted.py --junitxml=results/parity.xml || true
      - name: Upload parity test report
        uses: actions/upload-artifact@v4
        with:
          name: parity-test-report
          path: results/parity.xml
          if-no-files-found: warn

  bundle-v02:
    runs-on: ubuntu-latest
    needs: [golden, llm-pipeline-dev]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pytest PyPDF2 PyYAML
      - name: Download LLM artifacts
        uses: actions/download-artifact@v4
        with:
          name: llm-pipeline-output
          path: artifacts/llm_output
        continue-on-error: true
      - name: Generate scripted artifacts
        run: |
          python scripts/demo_pdf_to_rules.py \
            --pdf Reports/atlas-highlights-scams-and-fraud.pdf \
            --json-out artifacts/demo_rules.json \
            --html-out artifacts/demo_report.html || true
      - name: Build Audit Package v0.2
        run: |
          python scripts/build_audit_package.py \
            --pdf Reports/atlas-highlights-scams-and-fraud.pdf \
            --outdir artifacts/audit_package_v0_2
      - name: Upload bundle
        uses: actions/upload-artifact@v4
        with:
          name: audit-package-v02
          path: artifacts/audit_package_v0_2.zip
          if-no-files-found: warn
      - name: Analyst-Fit v0.3 tests
        run: |
          pytest -q tests/golden_cases/test_display_noise_v03.py || true
      - name: Backtest stub (dry run)
        run: |
          if [ -f samples/backtest.csv ]; then make backtest; fi