name: Docs with Code Changes

on:
  pull_request:
    branches: [ main ]

jobs:
  check-docs-updated:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Need full history to compare changes
    
    - name: Get changed files
      id: changed-files
      run: |
        # Get list of changed files in this PR
        git fetch origin main
        CHANGED_FILES=$(git diff --name-only origin/main...HEAD)
        echo "Changed files:"
        echo "$CHANGED_FILES"
        
        # Check if src/ files changed
        SRC_CHANGED=$(echo "$CHANGED_FILES" | grep -E '^src/' | wc -l)
        echo "src_changed=$SRC_CHANGED" >> $GITHUB_OUTPUT
        
        # Check if docs/ files changed  
        DOCS_CHANGED=$(echo "$CHANGED_FILES" | grep -E '^docs/' | wc -l)
        echo "docs_changed=$DOCS_CHANGED" >> $GITHUB_OUTPUT
        
        # Check if Safety-Sigma-Docs/ files changed
        SAFETY_DOCS_CHANGED=$(echo "$CHANGED_FILES" | grep -E '^Safety-Sigma-Docs/' | wc -l)
        echo "safety_docs_changed=$SAFETY_DOCS_CHANGED" >> $GITHUB_OUTPUT
        
        # List specific src/ files that changed
        SRC_FILES=$(echo "$CHANGED_FILES" | grep -E '^src/' | head -10)
        echo "src_files<<EOF" >> $GITHUB_OUTPUT
        echo "$SRC_FILES" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    
    - name: Check documentation requirements
      run: |
        SRC_CHANGED=${{ steps.changed-files.outputs.src_changed }}
        DOCS_CHANGED=${{ steps.changed-files.outputs.docs_changed }}
        SAFETY_DOCS_CHANGED=${{ steps.changed-files.outputs.safety_docs_changed }}
        
        echo "Source files changed: $SRC_CHANGED"
        echo "Docs files changed: $DOCS_CHANGED" 
        echo "Safety-Sigma-Docs changed: $SAFETY_DOCS_CHANGED"
        
        if [ "$SRC_CHANGED" -gt 0 ]; then
          echo "‚ùó Source code files were modified in this PR"
          echo "Changed src/ files:"
          echo "${{ steps.changed-files.outputs.src_files }}"
          
          TOTAL_DOCS_CHANGED=$((DOCS_CHANGED + SAFETY_DOCS_CHANGED))
          
          if [ "$TOTAL_DOCS_CHANGED" -eq 0 ]; then
            echo ""
            echo "‚ùå FAILURE: Source code changed but no documentation was updated"
            echo ""
            echo "When src/ files change, corresponding documentation must be updated:"
            echo ""
            echo "üìã Required Documentation Updates:"
            echo "‚Ä¢ src/pdf_processor/ingest.py ‚Üí Update docs/specs/pdf_processor_PRD_v0.1.md"
            echo "‚Ä¢ src/pdf_processor/extract.py ‚Üí Update Safety-Sigma-Docs/tests/golden_cases.md"
            echo "‚Ä¢ src/pdf_processor/ir.py ‚Üí Update docs/IR_SCHEMA.md and Safety-Sigma-Docs/ir/schema.md"
            echo "‚Ä¢ src/pdf_processor/audit.py ‚Üí Update docs/AUDIT.md and Safety-Sigma-Docs/validation/contract.md"
            echo "‚Ä¢ src/pdf_processor/rules.py ‚Üí Update rule documentation in Safety-Sigma-Docs/"
            echo ""
            echo "üîç Use the PR template checklist to identify which docs need updates"
            echo "üìö See .github/pull_request_template.md for complete mapping"
            echo ""
            exit 1
          else
            echo "‚úÖ SUCCESS: Documentation was updated alongside source code changes"
            echo "   - docs/ files changed: $DOCS_CHANGED"
            echo "   - Safety-Sigma-Docs/ files changed: $SAFETY_DOCS_CHANGED"
          fi
        else
          echo "‚úÖ No source code changes detected, documentation check not required"
        fi